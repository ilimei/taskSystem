{
  "parser": "babel-eslint",
  "plugins": ["react"],
  "parserOptions": {
    "ecmaVersion": 7,
    "sourceType": "module",
    "ecmaFeatures": {
      // lambda表达式
      "arrowFunctions":true,
      "experimentalObjectRestSpread": true,
      "objectLiteralComputedProperties": true,
      // class
      "classes": true,
      "defaultParams":true,
      "destructuring":true,
      "jsx": true,
      "modules": true
    }
  },
  "rules": {
    "no-console": 1,
    // 禁止条件表达式中出现赋值操作符
    "no-cond-assign":2,
    // 禁止在条件中使用常量表达式
    // if (false) {
    // doSomethingUnfinished();
    // } //cuowu
    "no-constant-condition":2,
    // 禁止 function 定义中出现重名参数
    "no-dupe-args":2,
    // 禁止对象字面量中出现重复的 key
    "no-dupe-keys":2,
    // 禁止重复的 case 标签
    "no-duplicate-case":2,
    // 禁止空语句块
    "no-empty":2,
    // 禁止在正则表达式中使用空字符集 (/^abc[]/)
    "no-empty-character-class":2,
    // 禁止对 catch 子句的参数重新赋值
    "no-ex-assign":2,
    // 禁止不必要的布尔转换
    "no-extra-boolean-cast":2,
    // 禁止不必要的括号 //(a * b) + c;//报错
    "no-extra-parens":0,
    // 禁止不必要的分号
    "no-extra-semi":2,
    // 禁止对 function 声明重新赋值
    "no-func-assign":2,
    // 禁止在嵌套的块中出现 function 或 var 声明
    "no-inner-declarations": [2,"functions"],
    // 禁止在字符串和注释之外不规则的空白
    "no-irregular-whitespace":2,
    // 禁止在 in 表达式中出现否定的左操作数
    "no-negated-in-lhs":2,
    // 禁止把全局对象 (Math 和 JSON) 作为函数调用 错误：var math = Math();
    "no-obj-calls":2,
    // 禁止直接使用 Object.prototypes 的内置属性
    "no-prototype-builtins":0,
    // 禁止正则表达式字面量中出现多个空格
    "no-regex-spaces":2,
    // 禁用稀疏数组
    "no-sparse-arrays":2,
    // 禁止出现令人困惑的多行表达式
    "no-unexpected-multiline":2,
    // 禁止在return、throw、continue 和 break语句之后出现不可达代码
    /*
     function foo() {
     return true;
     console.log("done");
     }//错误
     */
    "no-unreachable":2,
    // 要求使用 isNaN() 检查 NaN
    "use-isnan":2,
    // 强制使用有效的 JSDoc 注释
    "valid-jsdoc":1,
    // 强制 typeof 表达式与有效的字符串进行比较
    // typeof foo === "undefimed" 错误
    "valid-typeof":2,

    //////////////
    // 最佳实践 //
    //////////////
    // 定义对象的set存取器属性时，强制定义get
    "accessor-pairs":2,
    // 强制数组方法的回调函数中有 return 语句
    "array-callback-return":0,
    // 强制把变量的使用限制在其定义的作用域范围内
    "block-scoped-var":0,
    // 限制圈复杂度，也就是类似if else能连续接多少个
    "complexity": [2,9],
    // 要求 return 语句要么总是指定返回的值，要么不指定
    "consistent-return":0,
    // 强制所有控制语句使用一致的括号风格
    "curly": [2,"all"],
    // switch 语句强制 default 分支，也可添加 // no default 注释取消此次警告
    "default-case":2,
    // 强制object.key 中 . 的位置，参数:
    // property，'.'号应与属性在同一行
    // object, '.' 号应与对象名在同一行
    "dot-location": [2,"property"],
    // 强制使用.号取属性
    // 参数： allowKeywords：true 使用保留字做属性名时，只能使用.方式取属性
    // false 使用保留字做属性名时, 只能使用[]方式取属性 e.g [2, {"allowKeywords": false}]
    // allowPattern: 当属性名匹配提供的正则表达式时，允许使用[]方式取值,否则只能用.号取值 e.g [2, {"allowPattern": "^[a-z]+(_[a-z]+)+$"}]
    "dot-notation": [2, {"allowKeywords":false}],
    // 使用 === 替代 == allow-null允许null和undefined==
    "eqeqeq": [2,"allow-null"],
    // 要求 for-in 循环中有一个 if 语句
    "guard-for-in":2,
    // 禁用 alert、confirm 和 prompt
    "no-alert":0,
    // 禁用 arguments.caller 或 arguments.callee
    "no-caller":2,
    // 不允许在 case 子句中使用词法声明
    "no-case-declarations":2,
    // 禁止除法操作符显式的出现在正则表达式开始的位置
    "no-div-regex":2,
    // 禁止 if 语句中有 return 之后有 else
    "no-else-return":0,
    // 禁止出现空函数.如果一个函数包含了一条注释，它将不会被认为有问题。
    "no-empty-function":2,
    // 禁止使用空解构模式no-empty-pattern
    "no-empty-pattern":2,
    // 禁止在没有类型检查操作符的情况下与 null 进行比较
    "no-eq-null":1,
    // 禁止在全局范围内使用 var 和命名的 function 声明
    "no-implicit-globals":1,
    // 禁止 this 关键字出现在类和类对象之外
    "no-invalid-this":0,
    // 禁止删除变量
    "no-delete-var":2
  }
}